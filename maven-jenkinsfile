@Library('libin-jks-share') _
properties([[$class: 'RebuildSettings', autoRebuild: false, rebuildDisabled: false], buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '4')), parameters([text(defaultValue: 'git branch or tags', name: 'branchStatus')])])
def xxx_mvn = new org.devops.mvn()
def gitUrl = "git@codeup.aliyun.com:newxxx/xxx-cop/cop-data-process.git"

node {
    stage('git scm') {
        try {
            def branch = getBranch("${params.branchStatus}")
            echo branch
            checkout([$class: 'GitSCM', branches: [[name: "${branch}"]], extensions: [], userRemoteConfigs: [[credentialsId: 'xxx_code', name: 'branchStatus', url: gitUrl]]])
        } catch (Exception e) {
            echo "Error ${e.message}"
        }
    }
    stage('git scm and maven') {
        
        xxx_mvn.timedMavenBuild("clean package -U -DskipTests")
    }
    stage('command') {
        timedCommand {
            cmd = 'df -h'
            logFilePath = 'log.out'
        }

    }
    stage('find jar') {
        def myJar = findJars("${WORKSPACE}", ".jar")
        echo myJar
    }
}